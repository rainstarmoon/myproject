spring:
  http:
    encoding:
      force: true
      charset: UTF-8
      
  freemarker:
    allow-request-override: false
    cache: false
    check-template-location: true
    charset: UTF-8
    content-type: text/html; charset=utf-8
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: false
    suffix: .html
    template-loader-path: classpath:/templates/03html
    
  resources:
    static-locations: classpath:/templates/
    
  jackson:
    serialization:
      indent-output: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    
    # 不知道干啥的
    #validationQuery: select 'x'
    #testWhileIdle: true
    #testOnBorrow: false
    #testOnReturn: false
    
    # 打开PSCache，并且指定每个连接上PSCache的大小
    #poolPreparedStatements: true
    #maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  jpa:
    # 配置DBMS类型
    database: MYSQL
    # 配置是否将执行的SQL输出到日志
    show-sql: true
    hibernate:
      ddl-auto: update

  redis:
    database: 0
    timeout: 60s
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0

mybatis:
  type-aliases-package: com.myproject.entity
  mapper-locations: classpath:mapper/*.xml





